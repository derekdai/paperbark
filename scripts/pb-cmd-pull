#!/bin/bash
commands['pull']='download snapshots from specified remote'

pull_help() {
    echo """
usage:
    $pb_exec pull [REMOTE] SNAPSHOT
          REMOTE    remote name
        SNAPSHOT    snapshot to be downloaded from remote
"""

    exit 0
}

cmd_pull_prepare() {
    pb_prepare_repository

    if [[ 0 == $# ]]; then
        pull_help
    fi

    while [[ 0 != $# ]]; do
        case $1 in
            -h | --help)
                pull_help
                ;;
            *)
                if [[ -z "$pull_remote" ]] && [[ -f "$conf_dir/remotes/$1" ]]; then
                    pull_remote="$1"
                elif [[ -z "$pull_snapshot" ]]; then
                    pull_snapshot="$1"
                else
                    echo invalid argument: \'$1\'
                    exit 1
                fi
                ;;
        esac

        shift
    done

    if [[ -z "$pull_remote" ]]; then
        config_get 'default.remote' pull_remote
    fi

    if ! remote_get "$pull_remote" pull_remote; then
        echo no remote specified
        exit 1
    fi

    if [[ -z "$pull_snapshot" ]]; then
        echo no snapshot specified
        exit 1
    fi
}

cmd_pull_exec() {
    ssh_tunnel_create "$pull_remote" 8 9 pull $pull_snapshot

    if ! read line <&8 &>/dev/null; then
        echo snaphost not found on remote: $pull_snapshot
        exit 1
    fi
    snapshots=($line)

    snapshot_series_gen_diff snapshots "${snapshots[@]}" <&8 >&9

    report_progress=yes \
        snapshot_receive_all true "${snapshots[@]}" <&8

    echo snapshot ${pull_snapshot##*@} pulled successfully  >&2
}
