#!/bin/bash
commands['snapshot']='create a snapshot of a specified filesystem'
command_alias['snap']='snapshot'

snapshot_help() {
    echo """usage:
    $pb_exec snapshot|snap FS NAME[:VERSION]
             FS    target filesystem to be snapshoted
           NAME    name of snapshot. eg. ubuntu
        VERSION    version of snapshot. eg. 12.04 [default: latest]
"""
    exit $1
}

cmd_snapshot_prepare() {
    pb_prepare_repository

    while [[ 0 != $# ]]; do
        case "$1" in
        -h | --help)
            snapshot_help
            ;;
        *)
            if [[ -z "$snapshot_src" ]]; then
                snapshot_src="$1"
            elif [[ -z "$snapshot_id" ]]; then
                snapshot_id="$1"
            else
                echo unknown option: $1
                echo
                snapshot_help
            fi
            ;;
        esac

        shift
    done

    if [[ -z "$snapshot_src" || -z "$snapshot_id" ]]; then
        snapshot_help
    fi
}

cmd_snapshot_exec() {
    snapshot_id_add_version "$snapshot_id" latest snapshot_id
    if snapshot_id_normalize "$snapshot_id"; then
        echo destination snapshot already exists: \'$snapshot_id\'
        exit 1
    fi

    if staging_exists "$snapshot_src"; then
        staging_move_to_snapshots "$snapshot_src"
        cleanup_stack_push "snapshot_fs_to_stagings $snapshot_src"
    elif snapshot_exists "$snapshot_src" snapshot_src; then
        snapshot_src="${snapshot_src%@*}"
        snapshot_src="${snapshot_src##*/}"
    else
        echo snapshot source does not exist: $snapshot_src
    fi

    snapshot_create "$snapshot_src" "$snapshot_id"

    cleanup_stack_pop_n_drop
}
