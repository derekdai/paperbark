#!/bin/bash
commands['push']='upload snapshot onto specified remote'
dep_add ssh mkfifo zfs sudo lbzip2 pv

push_help() {
    echo """
usage:
    $pb_exec push [REMOTE] SNAPSHOT
          REMOTE    remote name
        SNAPSHOT    snapshot to be uploaded to remote
"""

    exit 0
}

cmd_push_prepare() {
    pb_prepare_repository

    while [[ 0 != $# ]]; do
        case $1 in
            -h | --help)
                push_help
                ;;
            *)
                if [[ -z "$push_remote" ]] && [[ -f "$conf_dir/remotes/$1" ]]; then
                    push_remote="$1"
                elif [[ -z "$push_snapshot" ]]; then
                    if [[ "$1" == :* ]]; then
                        push_snapshot="$1"
                    elif ! snapshot_id_normalize "$1" push_snapshot; then
                        echo snapshot does not exist: \'$1\'
                        exit 1
                    fi
                else
                    echo invalid argument: \'$1\'
                    exit 1
                fi
                ;;
        esac

        shift
    done

    if [[ -z "$push_remote" ]]; then
        config_get 'default.remote' push_remote
    fi
    remote_get "$push_remote" push_remote
    if [[ -z "$push_remote" ]]; then
        echo no remote specified
        exit 1
    fi

    if [[ -z "$push_snapshot" ]]; then
        echo no snapshot specified
        push_help
    fi
}

cmd_push_exec() {
    push_snapshot_series() {
        local -a snapshots
        snapshot_series_get "$1" snapshots

        ssh_tunnel_create "$push_remote" 8 9 "push" "${snapshots[@]}"

        # exchange snapshot list
        snapshot_series_receive_diff snapshots <&8
        if [[ 0 != ${#snapshots[@]} ]]; then
            report_progress=yes \
                snapshot_send_all true "${snapshots[@]}" >&9
        fi

        echo snapshot ${push_snapshot##*@} pushed successfully >&2
    }

    destroy_snapshot() {
        ssh_tunnel_create "$push_remote" 8 9 "remove" "$1"
        wait
    }

    if [[ "$push_snapshot" != :* ]]; then
        push_snapshot_series "$push_snapshot"
    else
        destroy_snapshot "${push_snapshot#:}"
        wait
    fi
}
